#include "mesh.h"#include "glm/glm.hpp"glm::vec3 Mass::normal() {    glm::vec3 N = glm::vec3(0.0f);        SharedEdge* start = sharedEdge;    SharedEdge* iter = start;        do {        N += cross(iter->next->mass->position - position, iter->next->next->mass->position - position);        if (iter->next->next->edge2)            iter = iter->next->next->edge2;        else            break;    } while (iter != start);        if (iter != start) {        start = sharedEdge;        iter = start;        if (iter->edge2) {            do {                N += cross(iter->edge2->next->next->mass->position - position, iter->edge2->mass->position - position);                if (iter->edge2->next->edge2)                    iter = iter->edge2->next->edge2;                else break;            } while (iter != start);        }    }        return N / length(N);}